import { Static } from '@sinclair/typebox';
export declare enum AskCopilotTool {
    GENERATE_CODE = "generate_code",
    GENERATE_HTTP_REQUEST = "generate_http_request"
}
export declare const AskCopilotRequest: import("@sinclair/typebox").TObject<{
    context: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        role: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<"user">, import("@sinclair/typebox").TLiteral<"assistant">]>;
        content: import("@sinclair/typebox").TString;
    }>>;
    selectedStepName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    flowVersionId: import("@sinclair/typebox").TString;
    flowId: import("@sinclair/typebox").TString;
    prompt: import("@sinclair/typebox").TString;
    tools: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TEnum<typeof AskCopilotTool>>;
}>;
export type AskCopilotRequest = Static<typeof AskCopilotRequest>;
export declare const AskCopilotCodeResponse: import("@sinclair/typebox").TObject<{
    code: import("@sinclair/typebox").TString;
    packageJson: import("@sinclair/typebox").TObject<{
        dependencies: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    }>;
    inputs: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    icon: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    title: import("@sinclair/typebox").TString;
    textMessage: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type AskCopilotCodeResponse = Static<typeof AskCopilotCodeResponse>;
export declare const AskCopilotHttpRequestResponse: import("@sinclair/typebox").TObject<{
    headers: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    body: import("@sinclair/typebox").TString;
    statusCode: import("@sinclair/typebox").TNumber;
    queryParams: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    method: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TString;
}>;
export type AskCopilotHttpRequestResponse = Static<typeof AskCopilotHttpRequestResponse>;
export declare const AskCopilotResponse: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    code: import("@sinclair/typebox").TString;
    packageJson: import("@sinclair/typebox").TObject<{
        dependencies: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    }>;
    inputs: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    icon: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    title: import("@sinclair/typebox").TString;
    textMessage: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>, import("@sinclair/typebox").TObject<{
    headers: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    body: import("@sinclair/typebox").TString;
    statusCode: import("@sinclair/typebox").TNumber;
    queryParams: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    method: import("@sinclair/typebox").TString;
    url: import("@sinclair/typebox").TString;
}>]>;
export type AskCopilotResponse = Static<typeof AskCopilotResponse>;
