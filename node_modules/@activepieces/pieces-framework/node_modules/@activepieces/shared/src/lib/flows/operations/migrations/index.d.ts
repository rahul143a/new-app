import { FlowVersion } from '../../flow-version';
export type Migration = {
    migrate: (flowVersion: FlowVersion) => FlowVersion;
};
export declare const flowMigrations: {
    apply: (flowVersion: FlowVersion) => {
        updatedBy?: string | null | undefined;
        schemaVersion?: string | null | undefined;
        id: string;
        flowId: string;
        created: string;
        updated: string;
        displayName: string;
        valid: boolean;
        trigger: {
            nextAction?: any;
            type: import("../../triggers/trigger").TriggerType.EMPTY;
            name: string;
            displayName: string;
            settings: any;
            valid: boolean;
        } | {
            nextAction?: any;
            type: import("../../triggers/trigger").TriggerType.PIECE;
            name: string;
            displayName: string;
            settings: {
                triggerName?: string | undefined;
                packageType: import("../../../pieces").PackageType;
                pieceType: import("../../../pieces").PieceType;
                pieceName: string;
                pieceVersion: string;
                input: {
                    [x: string]: any;
                };
                inputUiInfo: {
                    sampleDataFileId?: string | undefined;
                    sampleDataInputFileId?: string | undefined;
                    lastTestDate?: string | undefined;
                    customizedInputs?: {
                        [x: string]: unknown;
                    } | undefined;
                    schema?: {
                        [x: string]: unknown;
                    } | undefined;
                    currentSelectedData?: unknown;
                };
            };
            valid: boolean;
        };
        state: import("../../flow-version").FlowVersionState;
    };
};
