import { Static } from '@sinclair/typebox';
export declare enum ProjectOperationType {
    UPDATE_FLOW = "UPDATE_FLOW",
    CREATE_FLOW = "CREATE_FLOW",
    DELETE_FLOW = "DELETE_FLOW"
}
export declare enum ConnectionOperationType {
    UPDATE_CONNECTION = "UPDATE_CONNECTION",
    CREATE_CONNECTION = "CREATE_CONNECTION"
}
export declare const FlowState: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    version: import("@sinclair/typebox").TObject<{
        flowId: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
        trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
            settings: import("@sinclair/typebox").TObject<{
                pieceName: import("@sinclair/typebox").TString;
                pieceVersion: import("@sinclair/typebox").TString;
                pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                inputUiInfo: import("@sinclair/typebox").TObject<{
                    sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                    schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                    currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                }>;
            }>;
            name: import("@sinclair/typebox").TString;
            valid: import("@sinclair/typebox").TBoolean;
            displayName: import("@sinclair/typebox").TString;
            nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
            settings: import("@sinclair/typebox").TAny;
            name: import("@sinclair/typebox").TString;
            valid: import("@sinclair/typebox").TBoolean;
            displayName: import("@sinclair/typebox").TString;
            nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        }>]>;
        updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        valid: import("@sinclair/typebox").TBoolean;
        schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
        id: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
    }>;
    projectId: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
    folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
        failureCount?: number | undefined;
        type: import("../flows/flow").ScheduleType;
        cronExpression: string;
        timezone: string;
    } | null>>;
    publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
}>;
export type FlowState = Static<typeof FlowState>;
export declare const ConnectionState: import("@sinclair/typebox").TObject<{
    externalId: import("@sinclair/typebox").TString;
    pieceName: import("@sinclair/typebox").TString;
    displayName: import("@sinclair/typebox").TString;
}>;
export type ConnectionState = Static<typeof ConnectionState>;
export declare const ProjectState: import("@sinclair/typebox").TObject<{
    flows: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        externalId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        id: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        projectId: import("@sinclair/typebox").TString;
        status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
        folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
            failureCount?: number | undefined;
            type: import("../flows/flow").ScheduleType;
            cronExpression: string;
            timezone: string;
        } | null>>;
        publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        version: import("@sinclair/typebox").TObject<{
            flowId: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
            trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                settings: import("@sinclair/typebox").TObject<{
                    pieceName: import("@sinclair/typebox").TString;
                    pieceVersion: import("@sinclair/typebox").TString;
                    pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                    packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                    triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                    inputUiInfo: import("@sinclair/typebox").TObject<{
                        sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                    }>;
                }>;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>, import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                settings: import("@sinclair/typebox").TAny;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>]>;
            updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            valid: import("@sinclair/typebox").TBoolean;
            schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
            id: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
        }>;
    }>>;
    connections: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        externalId: import("@sinclair/typebox").TString;
        pieceName: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>>>;
}>;
export type ProjectState = Static<typeof ProjectState>;
export declare const ProjectOperation: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.UPDATE_FLOW>;
    newFlowState: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        version: import("@sinclair/typebox").TObject<{
            flowId: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
            trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                settings: import("@sinclair/typebox").TObject<{
                    pieceName: import("@sinclair/typebox").TString;
                    pieceVersion: import("@sinclair/typebox").TString;
                    pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                    packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                    triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                    inputUiInfo: import("@sinclair/typebox").TObject<{
                        sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                    }>;
                }>;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>, import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                settings: import("@sinclair/typebox").TAny;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>]>;
            updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            valid: import("@sinclair/typebox").TBoolean;
            schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
            id: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
        }>;
        projectId: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
        folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
            failureCount?: number | undefined;
            type: import("../flows/flow").ScheduleType;
            cronExpression: string;
            timezone: string;
        } | null>>;
        publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    }>;
    flowState: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        version: import("@sinclair/typebox").TObject<{
            flowId: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
            trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                settings: import("@sinclair/typebox").TObject<{
                    pieceName: import("@sinclair/typebox").TString;
                    pieceVersion: import("@sinclair/typebox").TString;
                    pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                    packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                    triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                    inputUiInfo: import("@sinclair/typebox").TObject<{
                        sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                    }>;
                }>;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>, import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                settings: import("@sinclair/typebox").TAny;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>]>;
            updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            valid: import("@sinclair/typebox").TBoolean;
            schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
            id: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
        }>;
        projectId: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
        folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
            failureCount?: number | undefined;
            type: import("../flows/flow").ScheduleType;
            cronExpression: string;
            timezone: string;
        } | null>>;
        publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.CREATE_FLOW>;
    flowState: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        version: import("@sinclair/typebox").TObject<{
            flowId: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
            trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                settings: import("@sinclair/typebox").TObject<{
                    pieceName: import("@sinclair/typebox").TString;
                    pieceVersion: import("@sinclair/typebox").TString;
                    pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                    packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                    triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                    inputUiInfo: import("@sinclair/typebox").TObject<{
                        sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                    }>;
                }>;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>, import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                settings: import("@sinclair/typebox").TAny;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>]>;
            updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            valid: import("@sinclair/typebox").TBoolean;
            schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
            id: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
        }>;
        projectId: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
        folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
            failureCount?: number | undefined;
            type: import("../flows/flow").ScheduleType;
            cronExpression: string;
            timezone: string;
        } | null>>;
        publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.DELETE_FLOW>;
    flowState: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        version: import("@sinclair/typebox").TObject<{
            flowId: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
            trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                settings: import("@sinclair/typebox").TObject<{
                    pieceName: import("@sinclair/typebox").TString;
                    pieceVersion: import("@sinclair/typebox").TString;
                    pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                    packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                    triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                    input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                    inputUiInfo: import("@sinclair/typebox").TObject<{
                        sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                        currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                    }>;
                }>;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>, import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                settings: import("@sinclair/typebox").TAny;
                name: import("@sinclair/typebox").TString;
                valid: import("@sinclair/typebox").TBoolean;
                displayName: import("@sinclair/typebox").TString;
                nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
            }>]>;
            updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            valid: import("@sinclair/typebox").TBoolean;
            schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
            id: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
        }>;
        projectId: import("@sinclair/typebox").TString;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
        folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
            failureCount?: number | undefined;
            type: import("../flows/flow").ScheduleType;
            cronExpression: string;
            timezone: string;
        } | null>>;
        publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    }>;
}>]>;
export type ProjectOperation = Static<typeof ProjectOperation>;
export declare const ConnectionOperation: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.UPDATE_CONNECTION>;
    newConnectionState: import("@sinclair/typebox").TObject<{
        externalId: import("@sinclair/typebox").TString;
        pieceName: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
    connectionState: import("@sinclair/typebox").TObject<{
        externalId: import("@sinclair/typebox").TString;
        pieceName: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.CREATE_CONNECTION>;
    connectionState: import("@sinclair/typebox").TObject<{
        externalId: import("@sinclair/typebox").TString;
        pieceName: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
}>]>;
export type ConnectionOperation = Static<typeof ConnectionOperation>;
export declare const DiffState: import("@sinclair/typebox").TObject<{
    operations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.UPDATE_FLOW>;
        newFlowState: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            version: import("@sinclair/typebox").TObject<{
                flowId: import("@sinclair/typebox").TString;
                displayName: import("@sinclair/typebox").TString;
                trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                    settings: import("@sinclair/typebox").TObject<{
                        pieceName: import("@sinclair/typebox").TString;
                        pieceVersion: import("@sinclair/typebox").TString;
                        pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                        packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                        triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                        inputUiInfo: import("@sinclair/typebox").TObject<{
                            sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                        }>;
                    }>;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>, import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                    settings: import("@sinclair/typebox").TAny;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>]>;
                updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                valid: import("@sinclair/typebox").TBoolean;
                schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
                id: import("@sinclair/typebox").TString;
                created: import("@sinclair/typebox").TString;
                updated: import("@sinclair/typebox").TString;
            }>;
            projectId: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
            status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
            folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
                failureCount?: number | undefined;
                type: import("../flows/flow").ScheduleType;
                cronExpression: string;
                timezone: string;
            } | null>>;
            publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        }>;
        flowState: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            version: import("@sinclair/typebox").TObject<{
                flowId: import("@sinclair/typebox").TString;
                displayName: import("@sinclair/typebox").TString;
                trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                    settings: import("@sinclair/typebox").TObject<{
                        pieceName: import("@sinclair/typebox").TString;
                        pieceVersion: import("@sinclair/typebox").TString;
                        pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                        packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                        triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                        inputUiInfo: import("@sinclair/typebox").TObject<{
                            sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                        }>;
                    }>;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>, import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                    settings: import("@sinclair/typebox").TAny;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>]>;
                updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                valid: import("@sinclair/typebox").TBoolean;
                schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
                id: import("@sinclair/typebox").TString;
                created: import("@sinclair/typebox").TString;
                updated: import("@sinclair/typebox").TString;
            }>;
            projectId: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
            status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
            folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
                failureCount?: number | undefined;
                type: import("../flows/flow").ScheduleType;
                cronExpression: string;
                timezone: string;
            } | null>>;
            publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.CREATE_FLOW>;
        flowState: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            version: import("@sinclair/typebox").TObject<{
                flowId: import("@sinclair/typebox").TString;
                displayName: import("@sinclair/typebox").TString;
                trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                    settings: import("@sinclair/typebox").TObject<{
                        pieceName: import("@sinclair/typebox").TString;
                        pieceVersion: import("@sinclair/typebox").TString;
                        pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                        packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                        triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                        inputUiInfo: import("@sinclair/typebox").TObject<{
                            sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                        }>;
                    }>;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>, import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                    settings: import("@sinclair/typebox").TAny;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>]>;
                updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                valid: import("@sinclair/typebox").TBoolean;
                schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
                id: import("@sinclair/typebox").TString;
                created: import("@sinclair/typebox").TString;
                updated: import("@sinclair/typebox").TString;
            }>;
            projectId: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
            status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
            folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
                failureCount?: number | undefined;
                type: import("../flows/flow").ScheduleType;
                cronExpression: string;
                timezone: string;
            } | null>>;
            publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.DELETE_FLOW>;
        flowState: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            version: import("@sinclair/typebox").TObject<{
                flowId: import("@sinclair/typebox").TString;
                displayName: import("@sinclair/typebox").TString;
                trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.PIECE>;
                    settings: import("@sinclair/typebox").TObject<{
                        pieceName: import("@sinclair/typebox").TString;
                        pieceVersion: import("@sinclair/typebox").TString;
                        pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
                        packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
                        triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                        input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
                        inputUiInfo: import("@sinclair/typebox").TObject<{
                            sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                            customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                            currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
                        }>;
                    }>;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>, import("@sinclair/typebox").TObject<{
                    type: import("@sinclair/typebox").TLiteral<import("../..").TriggerType.EMPTY>;
                    settings: import("@sinclair/typebox").TAny;
                    name: import("@sinclair/typebox").TString;
                    valid: import("@sinclair/typebox").TBoolean;
                    displayName: import("@sinclair/typebox").TString;
                    nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
                }>]>;
                updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                valid: import("@sinclair/typebox").TBoolean;
                schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
                state: import("@sinclair/typebox").TEnum<typeof import("../..").FlowVersionState>;
                id: import("@sinclair/typebox").TString;
                created: import("@sinclair/typebox").TString;
                updated: import("@sinclair/typebox").TString;
            }>;
            projectId: import("@sinclair/typebox").TString;
            created: import("@sinclair/typebox").TString;
            updated: import("@sinclair/typebox").TString;
            status: import("@sinclair/typebox").TEnum<typeof import("../flows/flow").FlowStatus>;
            folderId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
            schedule: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
                failureCount?: number | undefined;
                type: import("../flows/flow").ScheduleType;
                cronExpression: string;
                timezone: string;
            } | null>>;
            publishedVersionId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
        }>;
    }>]>>;
    connections: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.UPDATE_CONNECTION>;
        newConnectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
        connectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.CREATE_CONNECTION>;
        connectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>]>>;
}>;
export type DiffState = Static<typeof DiffState>;
export declare const ProjectSyncError: import("@sinclair/typebox").TObject<{
    flowId: import("@sinclair/typebox").TString;
    message: import("@sinclair/typebox").TString;
}>;
export type ProjectSyncError = Static<typeof ProjectSyncError>;
export declare const ProjectSyncPlanOperation: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.CREATE_FLOW>;
    flow: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.UPDATE_FLOW>;
    flow: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
    targetFlow: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<ProjectOperationType.DELETE_FLOW>;
    flow: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        displayName: import("@sinclair/typebox").TString;
    }>;
}>]>;
export type ProjectSyncPlanOperation = Static<typeof ProjectSyncPlanOperation>;
export declare const ProjectSyncPlan: import("@sinclair/typebox").TObject<{
    operations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.CREATE_FLOW>;
        flow: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.UPDATE_FLOW>;
        flow: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
        targetFlow: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ProjectOperationType.DELETE_FLOW>;
        flow: import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>]>>;
    connections: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.UPDATE_CONNECTION>;
        newConnectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
        connectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<ConnectionOperationType.CREATE_CONNECTION>;
        connectionState: import("@sinclair/typebox").TObject<{
            externalId: import("@sinclair/typebox").TString;
            pieceName: import("@sinclair/typebox").TString;
            displayName: import("@sinclair/typebox").TString;
        }>;
    }>]>>;
    errors: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        flowId: import("@sinclair/typebox").TString;
        message: import("@sinclair/typebox").TString;
    }>>;
}>;
export type ProjectSyncPlan = Static<typeof ProjectSyncPlan>;
