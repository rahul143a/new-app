import { Static } from '@sinclair/typebox';
import { ApId } from '../common/id-generator';
export type FlowVersionId = ApId;
export declare const LATEST_SCHEMA_VERSION = "1";
export declare enum FlowVersionState {
    LOCKED = "LOCKED",
    DRAFT = "DRAFT"
}
export declare const FlowVersion: import("@sinclair/typebox").TObject<{
    flowId: import("@sinclair/typebox").TString;
    displayName: import("@sinclair/typebox").TString;
    trigger: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<import("./triggers/trigger").TriggerType.PIECE>;
        settings: import("@sinclair/typebox").TObject<{
            pieceName: import("@sinclair/typebox").TString;
            pieceVersion: import("@sinclair/typebox").TString;
            pieceType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PieceType>;
            packageType: import("@sinclair/typebox").TEnum<typeof import("../pieces").PackageType>;
            triggerName: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            input: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TAny>;
            inputUiInfo: import("@sinclair/typebox").TObject<{
                sampleDataFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                sampleDataInputFileId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                lastTestDate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                customizedInputs: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                schema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TUnknown>>;
                currentSelectedData: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnknown>;
            }>;
        }>;
        name: import("@sinclair/typebox").TString;
        valid: import("@sinclair/typebox").TBoolean;
        displayName: import("@sinclair/typebox").TString;
        nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<import("./triggers/trigger").TriggerType.EMPTY>;
        settings: import("@sinclair/typebox").TAny;
        name: import("@sinclair/typebox").TString;
        valid: import("@sinclair/typebox").TBoolean;
        displayName: import("@sinclair/typebox").TString;
        nextAction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
    }>]>;
    updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    valid: import("@sinclair/typebox").TBoolean;
    schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    state: import("@sinclair/typebox").TEnum<typeof FlowVersionState>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type FlowVersion = Static<typeof FlowVersion>;
export declare const FlowVersionMetadata: import("@sinclair/typebox").TObject<{
    flowId: import("@sinclair/typebox").TString;
    displayName: import("@sinclair/typebox").TString;
    valid: import("@sinclair/typebox").TBoolean;
    state: import("@sinclair/typebox").TEnum<typeof FlowVersionState>;
    updatedBy: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    schemaVersion: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    updatedByUser: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
        platformId?: string | null | undefined;
        externalId?: string | null | undefined;
        id: string;
        created: string;
        updated: string;
        email: string;
        platformRole: import("../user").PlatformRole;
        status: import("../user").UserStatus;
        firstName: string;
        lastName: string;
    } | null>>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type FlowVersionMetadata = Static<typeof FlowVersionMetadata>;
