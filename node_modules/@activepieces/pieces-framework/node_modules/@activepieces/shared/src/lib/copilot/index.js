"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AskCopilotResponse = exports.AskCopilotHttpRequestResponse = exports.AskCopilotCodeResponse = exports.AskCopilotRequest = exports.AskCopilotTool = void 0;
const typebox_1 = require("@sinclair/typebox");
var AskCopilotTool;
(function (AskCopilotTool) {
    AskCopilotTool["GENERATE_CODE"] = "generate_code";
    AskCopilotTool["GENERATE_HTTP_REQUEST"] = "generate_http_request";
})(AskCopilotTool || (exports.AskCopilotTool = AskCopilotTool = {}));
exports.AskCopilotRequest = typebox_1.Type.Object({
    context: typebox_1.Type.Array(typebox_1.Type.Object({
        role: typebox_1.Type.Union([typebox_1.Type.Literal('user'), typebox_1.Type.Literal('assistant')]),
        content: typebox_1.Type.String(),
    })),
    selectedStepName: typebox_1.Type.Optional(typebox_1.Type.String()),
    flowVersionId: typebox_1.Type.String(),
    flowId: typebox_1.Type.String(),
    prompt: typebox_1.Type.String(),
    tools: typebox_1.Type.Array(typebox_1.Type.Enum(AskCopilotTool)),
});
exports.AskCopilotCodeResponse = typebox_1.Type.Object({
    code: typebox_1.Type.String(),
    packageJson: typebox_1.Type.Object({
        dependencies: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String()),
    }),
    inputs: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String()),
    icon: typebox_1.Type.Optional(typebox_1.Type.String()),
    title: typebox_1.Type.String(),
    textMessage: typebox_1.Type.Optional(typebox_1.Type.String()),
});
exports.AskCopilotHttpRequestResponse = typebox_1.Type.Object({
    headers: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String()),
    body: typebox_1.Type.String(),
    statusCode: typebox_1.Type.Number(),
    queryParams: typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.String()),
    method: typebox_1.Type.String(),
    url: typebox_1.Type.String(),
});
exports.AskCopilotResponse = typebox_1.Type.Union([
    exports.AskCopilotCodeResponse,
    exports.AskCopilotHttpRequestResponse,
]);
//# sourceMappingURL=index.js.map