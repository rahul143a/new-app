"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SaveSampleDataResponse = exports.DEFAULT_SAMPLE_DATA_SETTINGS = exports.SampleDataSetting = exports.StepExecutionPath = exports.StepRunResponse = exports.CreateStepRunRequestBody = exports.GetSampleDataRequest = exports.SaveSampleDataRequest = void 0;
const typebox_1 = require("@sinclair/typebox");
const file_1 = require("../../file");
exports.SaveSampleDataRequest = typebox_1.Type.Object({
    flowVersionId: typebox_1.Type.String(),
    projectId: typebox_1.Type.String(),
    stepName: typebox_1.Type.String(),
    payload: typebox_1.Type.Unknown(),
    fileType: typebox_1.Type.Optional(typebox_1.Type.Enum(file_1.FileType)),
});
exports.GetSampleDataRequest = typebox_1.Type.Object({
    flowId: typebox_1.Type.String(),
    flowVersionId: typebox_1.Type.String(),
    stepName: typebox_1.Type.String(),
    projectId: typebox_1.Type.String(),
    fileType: typebox_1.Type.Optional(typebox_1.Type.Enum(file_1.FileType)),
});
exports.CreateStepRunRequestBody = typebox_1.Type.Object({
    flowVersionId: typebox_1.Type.String(),
    stepName: typebox_1.Type.String(),
    id: typebox_1.Type.String(),
});
exports.StepRunResponse = typebox_1.Type.Object({
    id: typebox_1.Type.String(),
    success: typebox_1.Type.Boolean(),
    input: typebox_1.Type.Unknown(),
    output: typebox_1.Type.Unknown(),
    sampleDataFileId: typebox_1.Type.Optional(typebox_1.Type.String()),
    sampleDataInputFileId: typebox_1.Type.Optional(typebox_1.Type.String()),
    standardError: typebox_1.Type.String(),
    standardOutput: typebox_1.Type.String(),
});
exports.StepExecutionPath = typebox_1.Type.Array(typebox_1.Type.Tuple([typebox_1.Type.String(), typebox_1.Type.Number()]));
exports.SampleDataSetting = typebox_1.Type.Object({
    sampleDataFileId: typebox_1.Type.Optional(typebox_1.Type.String()),
    sampleDataInputFileId: typebox_1.Type.Optional(typebox_1.Type.String()),
    lastTestDate: typebox_1.Type.Optional(typebox_1.Type.String()),
    customizedInputs: typebox_1.Type.Optional(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Unknown())),
    schema: typebox_1.Type.Optional(typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Unknown())),
    /**
     * @deprecated This field is deprecated and will be removed in 2025.
     */
    currentSelectedData: typebox_1.Type.Optional(typebox_1.Type.Unknown()),
}, {
    additionalProperties: true,
});
exports.DEFAULT_SAMPLE_DATA_SETTINGS = {
    sampleDataFileId: undefined,
    sampleDataInputFileId: undefined,
    customizedInputs: undefined,
};
exports.SaveSampleDataResponse = (0, typebox_1.Pick)(file_1.File, ['id', 'size', 'type']);
//# sourceMappingURL=index.js.map