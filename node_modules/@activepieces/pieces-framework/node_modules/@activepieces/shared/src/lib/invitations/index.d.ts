import { Static } from '@sinclair/typebox';
import { PlatformRole } from '../user/index';
export declare enum InvitationType {
    PLATFORM = "PLATFORM",
    PROJECT = "PROJECT"
}
export declare enum InvitationStatus {
    PENDING = "PENDING",
    ACCEPTED = "ACCEPTED"
}
export declare const UserInvitation: import("@sinclair/typebox").TObject<{
    email: import("@sinclair/typebox").TString;
    status: import("@sinclair/typebox").TEnum<typeof InvitationStatus>;
    type: import("@sinclair/typebox").TEnum<typeof InvitationType>;
    platformId: import("@sinclair/typebox").TString;
    platformRole: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<PlatformRole | null>>;
    projectId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    projectRoleId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    projectRole: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
        platformId?: string | undefined;
        userCount?: number | undefined;
        type: string;
        id: string;
        name: string;
        created: string;
        updated: string;
        permissions: string[];
    } | null>>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type UserInvitation = Static<typeof UserInvitation>;
export declare const UserInvitationWithLink: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TEnum<typeof InvitationType>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    platformId: import("@sinclair/typebox").TString;
    projectId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    status: import("@sinclair/typebox").TEnum<typeof InvitationStatus>;
    platformRole: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<PlatformRole | null>>;
    email: import("@sinclair/typebox").TString;
    projectRoleId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    projectRole: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<{
        platformId?: string | undefined;
        userCount?: number | undefined;
        type: string;
        id: string;
        name: string;
        created: string;
        updated: string;
        permissions: string[];
    } | null>>;
    link: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type UserInvitationWithLink = Static<typeof UserInvitationWithLink>;
export declare const SendUserInvitationRequest: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<InvitationType.PROJECT>;
    email: import("@sinclair/typebox").TString;
    projectId: import("@sinclair/typebox").TString;
    projectRole: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<InvitationType.PLATFORM>;
    email: import("@sinclair/typebox").TString;
    platformRole: import("@sinclair/typebox").TEnum<typeof PlatformRole>;
}>]>;
export type SendUserInvitationRequest = Static<typeof SendUserInvitationRequest>;
export declare const AcceptUserInvitationRequest: import("@sinclair/typebox").TObject<{
    invitationToken: import("@sinclair/typebox").TString;
}>;
export type AcceptUserInvitationRequest = Static<typeof AcceptUserInvitationRequest>;
export declare const ListUserInvitationsRequest: import("@sinclair/typebox").TObject<{
    limit: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    cursor: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    type: import("@sinclair/typebox").TEnum<typeof InvitationType>;
    projectId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<string | null>>;
    status: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<typeof InvitationStatus>>;
}>;
export type ListUserInvitationsRequest = Static<typeof ListUserInvitationsRequest>;
