import { Static } from '@sinclair/typebox';
export declare enum WorkerMachineStatus {
    ONLINE = "ONLINE",
    OFFLINE = "OFFLINE"
}
export declare const MachineInformation: import("@sinclair/typebox").TObject<{
    cpuUsagePercentage: import("@sinclair/typebox").TNumber;
    diskInfo: import("@sinclair/typebox").TObject<{
        total: import("@sinclair/typebox").TNumber;
        free: import("@sinclair/typebox").TNumber;
        used: import("@sinclair/typebox").TNumber;
        percentage: import("@sinclair/typebox").TNumber;
    }>;
    workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    ramUsagePercentage: import("@sinclair/typebox").TNumber;
    totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
    ip: import("@sinclair/typebox").TString;
}>;
export type MachineInformation = Static<typeof MachineInformation>;
export declare const WorkerMachine: import("@sinclair/typebox").TObject<{
    information: import("@sinclair/typebox").TObject<{
        cpuUsagePercentage: import("@sinclair/typebox").TNumber;
        diskInfo: import("@sinclair/typebox").TObject<{
            total: import("@sinclair/typebox").TNumber;
            free: import("@sinclair/typebox").TNumber;
            used: import("@sinclair/typebox").TNumber;
            percentage: import("@sinclair/typebox").TNumber;
        }>;
        workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
        ramUsagePercentage: import("@sinclair/typebox").TNumber;
        totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
        ip: import("@sinclair/typebox").TString;
    }>;
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
}>;
export type WorkerMachine = Static<typeof WorkerMachine>;
export declare const WorkerMachineWithStatus: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    information: import("@sinclair/typebox").TObject<{
        cpuUsagePercentage: import("@sinclair/typebox").TNumber;
        diskInfo: import("@sinclair/typebox").TObject<{
            total: import("@sinclair/typebox").TNumber;
            free: import("@sinclair/typebox").TNumber;
            used: import("@sinclair/typebox").TNumber;
            percentage: import("@sinclair/typebox").TNumber;
        }>;
        workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
        ramUsagePercentage: import("@sinclair/typebox").TNumber;
        totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
        ip: import("@sinclair/typebox").TString;
    }>;
    status: import("@sinclair/typebox").TEnum<typeof WorkerMachineStatus>;
}>;
export type WorkerMachineWithStatus = Static<typeof WorkerMachineWithStatus>;
export declare const WorkerMachineHealthcheckRequest: import("@sinclair/typebox").TObject<{
    cpuUsagePercentage: import("@sinclair/typebox").TNumber;
    diskInfo: import("@sinclair/typebox").TObject<{
        total: import("@sinclair/typebox").TNumber;
        free: import("@sinclair/typebox").TNumber;
        used: import("@sinclair/typebox").TNumber;
        percentage: import("@sinclair/typebox").TNumber;
    }>;
    workerProps: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>;
    ramUsagePercentage: import("@sinclair/typebox").TNumber;
    totalAvailableRamInBytes: import("@sinclair/typebox").TNumber;
    ip: import("@sinclair/typebox").TString;
}>;
export type WorkerMachineHealthcheckRequest = Static<typeof WorkerMachineHealthcheckRequest>;
export declare const WorkerMachineHealthcheckResponse: import("@sinclair/typebox").TObject<{
    PUBLIC_URL: import("@sinclair/typebox").TString;
    TRIGGER_TIMEOUT_SECONDS: import("@sinclair/typebox").TNumber;
    PAUSED_FLOW_TIMEOUT_DAYS: import("@sinclair/typebox").TNumber;
    EXECUTION_MODE: import("@sinclair/typebox").TString;
    FLOW_TIMEOUT_SECONDS: import("@sinclair/typebox").TNumber;
    FLOW_WORKER_CONCURRENCY: import("@sinclair/typebox").TNumber;
    SCHEDULED_WORKER_CONCURRENCY: import("@sinclair/typebox").TNumber;
    LOG_LEVEL: import("@sinclair/typebox").TString;
    LOG_PRETTY: import("@sinclair/typebox").TString;
    ENVIRONMENT: import("@sinclair/typebox").TString;
    APP_WEBHOOK_SECRETS: import("@sinclair/typebox").TString;
    MAX_FILE_SIZE_MB: import("@sinclair/typebox").TNumber;
    SANDBOX_MEMORY_LIMIT: import("@sinclair/typebox").TString;
    SANDBOX_PROPAGATED_ENV_VARS: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    PIECES_SOURCE: import("@sinclair/typebox").TString;
    DEV_PIECES: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    SENTRY_DSN: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    LOKI_PASSWORD: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    LOKI_URL: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    LOKI_USERNAME: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    FILE_STORAGE_LOCATION: import("@sinclair/typebox").TString;
    S3_USE_SIGNED_URLS: import("@sinclair/typebox").TString;
}>;
export type WorkerMachineHealthcheckResponse = Static<typeof WorkerMachineHealthcheckResponse>;
