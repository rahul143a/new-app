import { Static } from "@sinclair/typebox";
export declare const SemVerType: import("@sinclair/typebox").TString<string>;
export declare const QueryVerType: import("@sinclair/typebox").TString<string>;
export declare const GetPieceRequestWithScopeParams: import("@sinclair/typebox").TObject<{
    name: import("@sinclair/typebox").TString<string>;
    scope: import("@sinclair/typebox").TString<string>;
}>;
export type GetPieceRequestWithScopeParams = Static<typeof GetPieceRequestWithScopeParams>;
export declare const GetPieceRequestParams: import("@sinclair/typebox").TObject<{
    name: import("@sinclair/typebox").TString<string>;
}>;
export type GetPieceRequestParams = Static<typeof GetPieceRequestParams>;
export declare const ListPiecesRequestQuery: import("@sinclair/typebox").TObject<{
    release: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
}>;
export type ListPiecesRequestQuery = Static<typeof ListPiecesRequestQuery>;
export declare const GetPieceRequestQuery: import("@sinclair/typebox").TObject<{
    version: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
}>;
export type GetPieceRequestQuery = Static<typeof GetPieceRequestQuery>;
export declare const PieceOptionRequest: import("@sinclair/typebox").TObject<{
    pieceVersion: import("@sinclair/typebox").TString<string>;
    pieceName: import("@sinclair/typebox").TString<string>;
    stepName: import("@sinclair/typebox").TString<string>;
    propertyName: import("@sinclair/typebox").TString<string>;
    input: import("@sinclair/typebox").TAny;
}>;
export type PieceOptionRequest = Static<typeof PieceOptionRequest>;
export declare const InstallPieceRequest: import("@sinclair/typebox").TObject<{
    pieceName: import("@sinclair/typebox").TString<string>;
    pieceVersion: import("@sinclair/typebox").TString<string>;
}>;
export type InstallPieceRequest = Static<typeof InstallPieceRequest>;
